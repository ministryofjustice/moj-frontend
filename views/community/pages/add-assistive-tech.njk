{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/date-input/macro.njk" import govukDateInput %}
{% from "govuk/components/file-upload/macro.njk" import govukFileUpload %}
{% from "govuk/components/character-count/macro.njk" import govukCharacterCount %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "govuk/components/tag/macro.njk" import govukTag %}
{% extends "base.njk" %}
{% block content %}
  <div class="app-layout__content">
    {% if backLink %}
      {{ govukBackLink({
        text: "Back",
        href: backLink
      }) }}
    {% endif %}
    {% if errorList %}
      {{ govukErrorSummary({
        titleText: "There is a problem",
        errorList: errorList
      }) }}
    {% endif %}
    <form method="POST" action="{{ submitUrl }}" enctype="multipart/form-data">
      <span class="govuk-caption-l">Submit a new component</span>
      <h1 class="govuk-heading-xl">Testing with assistive technology</h1>

      {{ govukDateInput({
        id: "testing-date",
        namePrefix: "testingDate",
        name: "testing-date",
        errorMessage: formErrors.testingDate,
        value: formData.testingDate,
        items: [
          {
            classes: (formErrorStyles['testingDate-day'] | default('')) + " govuk-input--width-2",
            name: "day",
            value: formData['testingDate-day']
          },
          {
            classes: (formErrorStyles['testingDate-month'] | default('')) + " govuk-input--width-2",
            name: "month",
            value: formData['testingDate-month']
          },
          {
            classes: (formErrorStyles['testingDate-year'] | default('')) + " govuk-input--width-4",
            name: "year",
            value: formData['testingDate-year']
          }
        ],
        fieldset: {
          legend: {
            text: "When was the component tested with assistive technology?",
            isPageHeading: true,
            classes: "govuk-fieldset__legend--m"
          }
        },
        hint: {
          text: "For example, 13 8 2024"
        }
      }) }}


      {{ govukFileUpload({
        id: "accessibility-report",
        name: "accessibilityReport",
        label: {
          text: "Upload the report (optional)",
          isPageHeading: true,
          classes: "govuk-label--m"
        },
        hint: {
          text: "The file needs to be a PDF and smaller than 10MB."
        },
        errorMessage: formErrors.accessibilityReport,
        value: formData.accessibilityReport,
        attributes: {
          accept: ".pdf"
        }
      }) }}

      {{ govukCharacterCount({
        id: "issues-discovered",
        name: "issuesDiscovered",
        maxwords: 250,
        label: {
          text: "Did the testing identify any issues with the component (optional)?",
          classes: "govuk-label--m",
          isPageHeading: true
        },
        errorMessage: formErrors.issuesDiscovered,
        value: formData.issuesDiscovered
      }) }}

      {%if formData.accessibilityReport.originalname %}
        {{ govukSummaryList({
          classes: 'govuk-summary-list--long-key',
          rows: [
            {
              key: {
              text: formData.accessibilityReport.originalname
            },
              value: {
              text: govukTag({ text: "Uploaded", classes: "govuk-tag--green" })
            }
            }
          ]
        }) }}
      {% endif %}

      <input type="hidden" name="_csrf" value="{{ csrfToken }}" />

      <div class="govuk-button-group moj-button-action">
        {{ govukButton({
          text: 'Continue',
          preventDoubleClick: true
        }) }}
      </div>
    </form>
  </div>

{% endblock %}
