{
  "componentCodeLanguage": "javascript",
  "componentCodeLanguageOther": "",
  "componentCode": "export class FileUploadModal {\r\n    init() {\r\n        // so we can reference the same func when removing event\r\n        this.handleTrapFocus = this.handleTrapFocus.bind(this)\r\n\r\n        this.cancelUploadButton = document.getElementById('cancel-upload-button')\r\n\r\n        this.dialog = document.getElementById('dialog')\r\n        this.dialogOverlay = document.getElementById('dialog-overlay')\r\n        this.dialogTitle = document.getElementById('dialog-title')\r\n        this.dialogFileCount = document.getElementById('file-count')\r\n\r\n        this.eventSource = null\r\n\r\n        if (this.cancelUploadButton && this.dialog) {\r\n            this.registerListeners()\r\n\r\n            if (this.dialog.dataset.startScan === \"1\") {\r\n                this.toggleDialogVisibility()\r\n                this.openConnection()\r\n            }\r\n        }\r\n    }\r\n\r\n    registerListeners() {\r\n        this.cancelUploadButton.addEventListener('click', () => {\r\n            document.getElementById('cancel-upload-form').submit()\r\n        })\r\n    }\r\n\r\n    toggleDialogVisibility() {\r\n        this.dialog.classList.toggle('govuk-!-display-none')\r\n        this.dialogOverlay.classList.toggle('govuk-!-display-none')\r\n\r\n        if (this.dialogVisible()) {\r\n            this.dialog.addEventListener('keydown', this.handleTrapFocus)\r\n            this.dialogTitle.focus()\r\n        } else {\r\n            this.dialog.removeEventListener('keydown', this.handleTrapFocus)\r\n        }\r\n    }\r\n\r\n    dialogVisible() {\r\n        return !this.dialog.classList.contains('govuk-!-display-none') && !this.dialogOverlay.classList.contains('govuk-!-display-none')\r\n    }\r\n\r\n    openConnection() {\r\n        this.eventSource = new EventSource(document.querySelector(\"[data-sse-url]\").dataset.sseUrl);\r\n\r\n        this.eventSource.onmessage = (event) => {\r\n            const data = JSON.parse(event.data)\r\n\r\n            if (data.finishedScanning === true) {\r\n                document.getElementById('scan-results-form').submit()\r\n            }\r\n\r\n            if (data.closeConnection === \"1\") {\r\n                this.eventSource.close()\r\n                document.getElementById('close-connection-form').submit()\r\n            }\r\n\r\n            let parts = this.dialogFileCount.innerHTML.split(' ')\r\n            parts[0] = data.scannedCount\r\n            this.dialogFileCount.innerHTML = parts.join(' ')\r\n        };\r\n    }\r\n\r\n    handleTrapFocus(e) {\r\n        const firstFocusableEl = this.dialogTitle\r\n        const lastFocusableEl = this.cancelUploadButton\r\n        const KEY_CODE_TAB = 9\r\n        const KEY_CODE_ESC = 27\r\n\r\n        const tabPressed = (e.key === 'Tab' || e.keyCode === KEY_CODE_TAB)\r\n        const escPressed = (e.key === 'Esc' || e.keyCode === KEY_CODE_ESC)\r\n\r\n        if (tabPressed) {\r\n            if (e.shiftKey) { /* shift + tab */\r\n                if (document.activeElement === firstFocusableEl) {\r\n                    lastFocusableEl.focus()\r\n                    e.preventDefault()\r\n                }\r\n            } else /* tab */ {\r\n                if (document.activeElement === lastFocusableEl) {\r\n                    firstFocusableEl.focus()\r\n                    e.preventDefault()\r\n                }\r\n            }\r\n        }\r\n\r\n        if (escPressed) {\r\n            document.getElementById('cancel-upload-form').submit()\r\n        }\r\n    }\r\n}",
  "componentCodeUsage": ""
}